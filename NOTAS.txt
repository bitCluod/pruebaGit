-BASICO--

Configurar el nombre y correo del ususario

$ git config --global user.email "scheneider12.12@gmail.com"
$ git config --global user.name "Salvador Rojas"

Subir archivo a git hub

- git init
- git add "Nombre del archivo"  o git add . (añade todo)
- git status -s (para verificar si se agrego el archivo)
- git commint -m "Nombre con el que se sube el respaldo"

Entrar a git hub -> nuevo repositorio

- git remote add origin "liga" (https://github.com/bitCluod/pruebaGit.git)
- git push origin master

Actualizar de local a git hub

- git add .
- git commit -m "comentario"
- git push origin master

Actualizar de git a local

- editar en github
- iniciar bash en carpeta
- git pull o git pull "liga" (https://github.com/bitCluod/pruebaGit.git)

Tags Especificar versiones

- git tag "Nombre de version" -m "comentario" (08-04-2021v1)
- git push --tags

Verificar los commit

- git log --oneline

Restaurar borra lo nuevo "forma local"

-git reset --hard (comit de referncia "No debe llevar ni parentesis ni comillas dobles")

Modificar comentario de un commit

- git commit --amend 
- :i
- Editar nombre
- ESC
- :wq

--RAMAS--

crear rama

- git branch (nombre de la rama "No debe llevar ni parentesis ni comillas dobles")
- git log --oneline o git branch (confirma visualmente la creación de la rama) 

moverse de rama

- git checkout (nombre de la rama a la que se mueve "No debe llevar ni parentesis ni comillas dobles")
- git branch (para confirmar la ubicaciond de la rama)
- git branch -d "nombre de la rama a eliminar"

APARTIR DE AQUI, SE PUEDEN UTILIZAR LOS COMANDOS PARA AGREGAR VERSIONES

Moverse a master

- git checkout master

Unir ramas

- git merge (nombre de la rama a unir "No debe llevar ni parentesis comillas dobles")
